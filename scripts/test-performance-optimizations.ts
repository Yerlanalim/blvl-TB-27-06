// BIZLEVEL: –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

import { performance } from 'perf_hooks';

// –ò–º–∏—Ç–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const testUtilities = {
  // –¢–µ—Å—Ç debounce —Ñ—É–Ω–∫—Ü–∏–∏
  testDebounce: () => {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ debounce...');
    
    const debounce = <T extends (...args: any[]) => any>(
      func: T,
      wait: number
    ): (...args: Parameters<T>) => void => {
      let timeout: NodeJS.Timeout;
      
      return function executedFunction(...args: Parameters<T>) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    };

    let callCount = 0;
    const testFunction = () => {
      callCount++;
      console.log(`  ‚úÖ Debounced function called: ${callCount}`);
    };

    const debouncedFunction = debounce(testFunction, 100);
    
    // –ë—ã—Å—Ç—Ä—ã–µ –≤—ã–∑–æ–≤—ã - –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π
    debouncedFunction();
    debouncedFunction();
    debouncedFunction();
    
    setTimeout(() => {
      console.log(`  üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ ${callCount} —Ä–∞–∑ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 1)`);
    }, 200);
  },

  // –¢–µ—Å—Ç throttle —Ñ—É–Ω–∫—Ü–∏–∏
  testThrottle: () => {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ throttle...');
    
    const throttle = <T extends (...args: any[]) => any>(
      func: T,
      limit: number
    ): (...args: Parameters<T>) => void => {
      let inThrottle: boolean;
      
      return function executedFunction(...args: Parameters<T>) {
        if (!inThrottle) {
          func(...args);
          inThrottle = true;
          setTimeout(() => inThrottle = false, limit);
        }
      };
    };

    let callCount = 0;
    const testFunction = () => {
      callCount++;
      console.log(`  ‚úÖ Throttled function called: ${callCount}`);
    };

    const throttledFunction = throttle(testFunction, 100);
    
    // –ë—ã—Å—Ç—Ä—ã–µ –≤—ã–∑–æ–≤—ã - –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π
    throttledFunction();
    throttledFunction();
    throttledFunction();
    
    setTimeout(() => {
      console.log(`  üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ ${callCount} —Ä–∞–∑ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 1)`);
    }, 50);
  },

  // –¢–µ—Å—Ç –º–µ–º–æ–∏–∑–∞—Ü–∏–∏
  testMemoization: () => {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–º–æ–∏–∑–∞—Ü–∏–∏...');
    
    const memoize = <T extends (...args: any[]) => any>(fn: T): T => {
      const cache = new Map();
      
      return ((...args: Parameters<T>): ReturnType<T> => {
        const key = JSON.stringify(args);
        
        if (cache.has(key)) {
          console.log(`  üéØ Cache hit for key: ${key}`);
          return cache.get(key);
        }
        
        console.log(`  üîç Computing for key: ${key}`);
        const result = fn(...args);
        cache.set(key, result);
        
        return result;
      }) as T;
    };

    const expensiveFunction = (n: number): number => {
      // –ò–º–∏—Ç–∞—Ü–∏—è –¥–æ—Ä–æ–≥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
      let result = 0;
      for (let i = 0; i < n; i++) {
        result += i;
      }
      return result;
    };

    const memoizedFunction = memoize(expensiveFunction);
    
    const start1 = performance.now();
    const result1 = memoizedFunction(10000);
    const time1 = performance.now() - start1;
    
    const start2 = performance.now();
    const result2 = memoizedFunction(10000); // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–∑ –∫—ç—à–∞
    const time2 = performance.now() - start2;
    
    console.log(`  üìä –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤: ${time1.toFixed(2)}ms, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${result1}`);
    console.log(`  üìä –í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤: ${time2.toFixed(2)}ms, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${result2}`);
    console.log(`  üöÄ –£—Å–∫–æ—Ä–µ–Ω–∏–µ: ${(time1 / time2).toFixed(2)}x`);
  },

  // –¢–µ—Å—Ç LRU –∫—ç—à–∞
  testLRUCache: () => {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LRU –∫—ç—à–∞...');
    
    const createLRUCache = <K, V>(maxSize: number) => {
      const cache = new Map<K, V>();
      
      return {
        get(key: K): V | undefined {
          if (cache.has(key)) {
            const value = cache.get(key)!;
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –∫–æ–Ω–µ—Ü (most recently used)
            cache.delete(key);
            cache.set(key, value);
            return value;
          }
          return undefined;
        },
        
        set(key: K, value: V): void {
          if (cache.has(key)) {
            cache.delete(key);
          } else if (cache.size >= maxSize) {
            // –£–¥–∞–ª—è–µ–º oldest item
            const firstKey = cache.keys().next().value;
            if (firstKey !== undefined) {
              console.log(`  üóëÔ∏è –£–¥–∞–ª—è–µ–º –∏–∑ –∫—ç—à–∞: ${firstKey}`);
              cache.delete(firstKey);
            }
          }
          cache.set(key, value);
          console.log(`  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫—ç—à: ${key} = ${value}`);
        },
        
        size: () => cache.size,
        clear: () => cache.clear()
      };
    };

    const lruCache = createLRUCache<string, number>(3);
    
    lruCache.set('a', 1);
    lruCache.set('b', 2);
    lruCache.set('c', 3);
    console.log(`  üìä –†–∞–∑–º–µ—Ä –∫—ç—à–∞: ${lruCache.size()}`);
    
    lruCache.set('d', 4); // –î–æ–ª–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å 'a'
    console.log(`  üìä –†–∞–∑–º–µ—Ä –∫—ç—à–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è: ${lruCache.size()}`);
    
    console.log(`  üîç –ü–æ–ª—É—á–µ–Ω–∏–µ 'a': ${lruCache.get('a')} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å undefined)`);
    console.log(`  üîç –ü–æ–ª—É—á–µ–Ω–∏–µ 'b': ${lruCache.get('b')} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2)`);
  },

  // –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  testComponentPerformance: () => {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
    
    // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    const simulateComponentRender = (componentName: string, complexity: number) => {
      const start = performance.now();
      
      // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      let result = 0;
      for (let i = 0; i < complexity * 1000; i++) {
        result += Math.random();
      }
      
      const renderTime = performance.now() - start;
      
      const isSlowDevice = renderTime > 16; // 60 FPS = 16ms per frame
      const performanceRating = renderTime < 16 ? 'üü¢' : renderTime < 50 ? 'üü°' : 'üî¥';
      
      console.log(`  ${performanceRating} ${componentName}: ${renderTime.toFixed(2)}ms ${isSlowDevice ? '(–º–µ–¥–ª–µ–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)' : '(–±—ã—Å—Ç—Ä–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)'}`);
      
      return { renderTime, isSlowDevice };
    };

    const components = [
      { name: 'OptimizedImage', complexity: 1 },
      { name: 'VerticalVideoPlayer', complexity: 3 },
      { name: 'LeoChat', complexity: 5 },
      { name: 'StatisticsChart', complexity: 8 },
      { name: 'CodeEditor', complexity: 10 }
    ];

    components.forEach(component => {
      simulateComponentRender(component.name, component.complexity);
    });
  }
};

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runPerformanceTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ BizLevel\n');
  
  try {
    testUtilities.testDebounce();
    
    setTimeout(() => {
      testUtilities.testThrottle();
    }, 300);
    
    setTimeout(() => {
      testUtilities.testMemoization();
    }, 500);
    
    setTimeout(() => {
      testUtilities.testLRUCache();
    }, 700);
    
    setTimeout(() => {
      testUtilities.testComponentPerformance();
    }, 900);
    
    setTimeout(() => {
      console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —á—Ç–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('üéØ BizLevel –≥–æ—Ç–æ–≤ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é');
    }, 1200);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  runPerformanceTests();
}

export { testUtilities, runPerformanceTests }; 